name: Deploy to Elastic Beanstalk

on:
  schedule:
    # 毎日18時
    - cron: '0 9 * * *'

jobs:
  deploy:

    runs-on: ubuntu-latest
    timeout-minutes: 1200

    steps:
    - uses: actions/checkout@v2

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ secrets.AWS_ECR_REPO_NAME }}
        IMAGE_TAG: staging
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    - uses: actions/setup-python@master
      with:
        python-version: '3.7'

    - name: Install awsebcli
      run: pip install -U awsebcli

    - name: Deploy to Elastic Beanstalk
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ secrets.AWS_ECR_REPO_NAME }}
        IMAGE_TAG: staging
        EB_ENVIRONMENT_NAME: staging
      run: |
        cp -r .ebextensions/ deployments/.ebextensions
        cd deployments
        sed -i -e "s|t2.small|t2.micro|g" .ebextensions/00_options.config
        sed -i -e "s|{RepositoryName}|$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG|g" Dockerrun.aws.json
        eb deploy ${EB_ENVIRONMENT_NAME}
